Imagine this scenario:

I walk up to the counter at a fast-food restaurant, and place an order for a cheeseburger.I hand the cashier Rs.60.


By placing my order and paying for it, I've made a request for a value back (the cheeseburger). I've started a transaction.



But often, the chesseburger is not immediately available for me. The cashier hands me something in place of my cheeseburger:
a receipt with an order number on it.



This order number is an IOU ("I owe you") promise that ensures that eventually, I should receive my cheeseburger (A PROMISE).


So I hold onto my receipt and order number. I know it represents my future cheeseburger, so I don't need to worry about
it anymore -- aside from being hungry!



While I wait, I can do other things, like send a text message to a friend that
says, "Hey, can you come join me for lunch? I'm going to eat a cheeseburger." (MOVE TO OTHER PART OF CODE)



I am reasoning about my future cheeseburger already, even though I don't have it in my hands yet.
The placeholder essentially makes the value time independent. It's a future value.



Eventually, I hear, "Order 113!" and I gleefully walk back up to the counter with receipt in hand.
I hand my receipt to the cashier, and I take my cheeseburger in return.



In other words, once my future value was ready, I exchanged my value-promise for the value itself.



But there's another possible outcome. They call my order number, but when I go to retrieve my cheeseburger,
the cashier regretfully informs me, "I'm sorry, but we appear to be all out of cheeseburgers."



Every time I order a cheeseburger, I know that I'll either get a cheeseburger eventually(FULFILL), or I'll get the sad news of the
cheeseburger shortage, and I'll have to figure out something else to eat for lunch (REJECT).